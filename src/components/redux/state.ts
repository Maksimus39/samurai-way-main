// --------------------------------------------------------------------------
// —Å–µ–π—á–∞—Å –º—ã —Ç—É—Ç –±—É–¥–µ–º –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—å —Ç–∏–ø–∏–∑–∞—Ü–∏—é state
// —Ç–∏–ø –¥–ª—è messages
type MessageType = {
    id: number
    message: string
}
// —Ç–∏–ø –¥–ª—è dialogs
type DialogsType = {
    id: string
    name: string
}
// —Ç–∏–ø –¥–ª—è dialogsPage
type DialogsPageType = {
    dialogs: DialogsType[]
    messages: MessageType[]
}
// —Ç–∏–ø –¥–ª—è posts
type PostType = {
    id: number
    messages: string
    LikesCounts: number
}
// —Ç–∏–ø –¥–ª—è profilePage
export type ProfilePageType = {
    posts: PostType[]
    newPostText: string
}
// —Ç–∏–ø –¥–ª—è sidebar
type SideBarType = {}
// –æ–±—â–∏–π —Ç–∏–ø –¥–ª—è state
export type RootStateType = {
    profilePage: ProfilePageType
    dialogsPage: DialogsPageType
    sidebar: SideBarType
}

// ---------------------------------------------------------------------------
// —Ç–∏–ø–∏–∑–∞—Ü–∏—è –æ–±—ä–µ–∫—Ç–∞ store
export type StoreType = {
    _state: RootStateType
    _rerenderEntireTree: () => void
    subscribe: (observer: () => void) => void
    getState: () => RootStateType
    dispatch: (action: DispatchActionType) => void
}

// -----------------------------------------------------------------------------
// –Ω–∞–∑–≤–∞–Ω–∏–µ –æ–±—â–µ–≥–æ —Ç–∏–ø–∞ –¥–ª—è –º–µ—Ç–æ–¥–∞ dispatch
export type DispatchActionType =
    ReturnType<typeof addPostActionCreator>
    | ReturnType<typeof updateNewPostTextActionCreator>

// –Ω–∞–ø–∏—Å–∞–Ω–∏–µ —Ç–∏–ø–æ–≤ –¥–ª—è –º–µ—Ç–æ–¥–∞ dispatch
// type AddPostActionType = {
//     type: "ADD-POST",
//     newPostText: string
// }

// type UpdateNewPostTextActionType = {
//     type: "UPDATE-NEW-POST-TEXT",
//     newText: string
// }

// // 1
// type AddPostActionType = ReturnType<typeof addPostActionCreator>
//
// // 2
// type UpdateNewPostTextActionType =ReturnType<typeof updateNewPostTextActionCreator>
// // ------------------------------------------------------------------------------

// —Å–æ–∑–¥–∞–Ω–∏–µ ActionCreator -------------------------------------------------------------------------------
export const addPostActionCreator = (newPostText: string) => {
    return {
        type: "ADD-POST",
        newPostText: newPostText
    } as const
}
export let updateNewPostTextActionCreator = (newText: string) => {
    return {
        type: "UPDATE-NEW-POST-TEXT",
        newText: newText
    } as const
}


// ----------------------------------------------------------------------------------------------------


// —Å–æ–∑–¥–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞ store
export let store: StoreType = {
    _state: {
        profilePage: {
            posts: [
                {id: 1, messages: "I am a champion in weightlifting", LikesCounts: 15},
                {id: 2, messages: "Ha, hold my beer!", LikesCounts: 20}
            ],
            newPostText: " "
        },
        dialogsPage: {
            dialogs: [
                {id: "1", name: "Max"},
                {id: "2", name: "Sergey"},
                {id: "3", name: "Aleksandr"}
            ],
            messages: [
                {id: 1, message: " –ö–∞–∫ —Ç–≤–æ–∏ –¥–µ–ª–∞? üòä\n"},
                {id: 2, message: "–ü—Ä–∏–≤–µ—Ç"},
                {id: 3, message: "–Ø –æ—á–µ–Ω—å —Ä–∞–¥ –ø–æ–º–æ—á—å!"},
                {id: 4, message: "–ß–µ–º —è –º–æ–≥—É –±—ã—Ç—å –ø–æ–ª–µ–∑–µ–Ω? ü§î"},
                {id: 5, message: "–£—Ä–∞! –£ –º–µ–Ω—è –ø–æ–ª—É—á–∏–ª–æ—Å—å! üéâ"},
                {id: 6, message: "–û–π, –∏–∑–≤–∏–Ω–∏, —è –Ω–µ –º–æ–≥—É –Ω–∞–π—Ç–∏ –æ—Ç–≤–µ—Ç –Ω–∞ —ç—Ç–æ—Ç –≤–æ–ø—Ä–æ—Å. üòï"},
                {id: 7, message: "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–µ —Å—Ç–µ—Å–Ω—è–π—Ç–µ—Å—å –∑–∞–¥–∞—Ç—å –º–Ω–µ –ª—é–±–æ–π –≤–æ–ø—Ä–æ—Å! üí¨"},
                {id: 8, message: "–°–ø–∞—Å–∏–±–æ –∑–∞ —Ç–≤–æ—é –ø–æ–º–æ—â—å! –Ø –æ—á–µ–Ω—å –±–ª–∞–≥–æ–¥–∞—Ä–µ–Ω. üôè"},
            ]
        },
        sidebar: {}
    },
    // –ø–µ—Ä–µ—Ä–∏—Å–æ–≤–∫–∞ callback
    _rerenderEntireTree() {
        console.log("state")
    },

    getState() {
        return this._state
    },
    subscribe(observer) {
        this._rerenderEntireTree = observer;
    },

    // –Ω–∞–ø–∏—Å–∞–Ω–∏–µ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ –º–µ—Ç–æ–¥–∞ dispatch
    dispatch(action) {  // { type: "ADD-POST"}
        if (action.type === "ADD-POST") {
            // // —Å–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –ø–æ—Å—Ç–∞
            let newPost = {
                id: 5,
                messages: action.newPostText,
                LikesCounts: 0
            }
            // –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –ø–æ—Å—Ç–∞ –≤ state
            this._state.profilePage.posts.push(newPost)
            this._state.profilePage.newPostText = " "
            this._rerenderEntireTree()

        } else if (action.type === "UPDATE-NEW-POST-TEXT") {
            // –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –ø–æ—Å—Ç–∞ –≤ state
            this._state.profilePage.newPostText = action.newText
            this._rerenderEntireTree()
        }
    }
}