// —Å–µ–π—á–∞—Å –º—ã —Ç—É—Ç –±—É–¥–µ–º –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—å —Ç–∏–ø–∏–∑–∞—Ü–∏—é state
// —Ç–∏–ø –¥–ª—è messages
type MessageType = {
    id: number
    message: string
}
// —Ç–∏–ø –¥–ª—è dialogs
type DialogsType = {
    id: string
    name: string
}
// —Ç–∏–ø –¥–ª—è dialogsPage
type DialogsPageType = {
    dialogs: DialogsType[]
    messages: MessageType[]
}
// —Ç–∏–ø –¥–ª—è posts
type PostType = {
    id: number
    messages: string
    LikesCounts: number
}
// —Ç–∏–ø –¥–ª—è profilePage
export type ProfilePageType = {
    posts: PostType[]
    newPostText: string
}
// —Ç–∏–ø –¥–ª—è sidebar
type SideBarType = {}
// –æ–±—â–∏–π —Ç–∏–ø –¥–ª—è state
export type RootStateType = {
    profilePage: ProfilePageType
    dialogsPage: DialogsPageType
    sidebar: SideBarType
}


// —Ç–∏–ø–∏–∑–∞—Ü–∏—è –æ–±—ä–µ–∫—Ç–∞ store
export type StoreType = {
    _state: RootStateType
    updateNewPostText: (newText: string) => void
    addPost: () => void
    _rerenderEntireTree: () => void
    subscribe: (observer: () => void) => void
    getState: () => RootStateType
}


// —Å–æ–∑–¥–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞ store
export let store: StoreType = {
    _state: {
        profilePage: {
            posts: [
                {id: 1, messages: "I am a champion in weightlifting", LikesCounts: 15},
                {id: 2, messages: "Ha, hold my beer!", LikesCounts: 20}
            ],
            newPostText: " "
        },
        dialogsPage: {
            dialogs: [
                {id: "1", name: "Max"},
                {id: "2", name: "Sergey"},
                {id: "3", name: "Aleksandr"}
            ],
            messages: [
                {id: 1, message: " –ö–∞–∫ —Ç–≤–æ–∏ –¥–µ–ª–∞? üòä\n"},
                {id: 2, message: "–ü—Ä–∏–≤–µ—Ç"},
                {id: 3, message: "–Ø –æ—á–µ–Ω—å —Ä–∞–¥ –ø–æ–º–æ—á—å!"},
                {id: 4, message: "–ß–µ–º —è –º–æ–≥—É –±—ã—Ç—å –ø–æ–ª–µ–∑–µ–Ω? ü§î"},
                {id: 5, message: "–£—Ä–∞! –£ –º–µ–Ω—è –ø–æ–ª—É—á–∏–ª–æ—Å—å! üéâ"},
                {id: 6, message: "–û–π, –∏–∑–≤–∏–Ω–∏, —è –Ω–µ –º–æ–≥—É –Ω–∞–π—Ç–∏ –æ—Ç–≤–µ—Ç –Ω–∞ —ç—Ç–æ—Ç –≤–æ–ø—Ä–æ—Å. üòï"},
                {id: 7, message: "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–µ —Å—Ç–µ—Å–Ω—è–π—Ç–µ—Å—å –∑–∞–¥–∞—Ç—å –º–Ω–µ –ª—é–±–æ–π –≤–æ–ø—Ä–æ—Å! üí¨"},
                {id: 8, message: "–°–ø–∞—Å–∏–±–æ –∑–∞ —Ç–≤–æ—é –ø–æ–º–æ—â—å! –Ø –æ—á–µ–Ω—å –±–ª–∞–≥–æ–¥–∞—Ä–µ–Ω. üôè"},
            ]
        },
        sidebar: {}
    },

    // —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è users –Ω–∞ —Å—Ç–µ–Ω—É
    updateNewPostText(newText: string) {

        // –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –ø–æ—Å—Ç–∞ –≤ state
        this._state.profilePage.newPostText = newText
        this._rerenderEntireTree()
    },

    // —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è users –Ω–∞ —Å—Ç–µ–Ω—É
    addPost() {

        // —Å–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –ø–æ—Å—Ç–∞
        let newPost = {
            id: 5,
            messages: this._state.profilePage.newPostText,
            LikesCounts: 0
        }
        // –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –ø–æ—Å—Ç–∞ –≤ state
        this._state.profilePage.posts.push(newPost)
        this._state.profilePage.newPostText = " "
        this._rerenderEntireTree()
    },

    // –ø–µ—Ä–µ—Ä–∏—Å–æ–≤–∫–∞ –∫–æ–ª–ª–±–µ–∫–æ–º
    _rerenderEntireTree() {
        console.log("state")
    },

    subscribe(observer) {
        this._rerenderEntireTree = observer;
    },

    getState() {
        return this._state
    }
}