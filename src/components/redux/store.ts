// --------------------------------------------------------------------------
// —Å–µ–π—á–∞—Å –º—ã —Ç—É—Ç –±—É–¥–µ–º –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—å —Ç–∏–ø–∏–∑–∞—Ü–∏—é state
// —Ç–∏–ø –¥–ª—è messages
import {profilePageReducer, ProfilePageType} from "./profile-Page-Redu—Åer";
import {dialogsPageReducer} from "./dialogs-Page-Redu—Åer";
import {sidebarReducer} from "./sidebar-Reducer";
import {
    followActionCreator,
    setUsersActionCreator,
    unfollowActionCreator,
    usersReducer,
    UserType
} from "./users-Redu—Åer";


export type MessageType = {
    id: string
    message: string
}
// —Ç–∏–ø –¥–ª—è dialogs
export type DialogsType = {
    id: string
    name: string
}
// —Ç–∏–ø –¥–ª—è dialogsPage
export type DialogsPageType = {
    dialogs: DialogsType[]
    messages: MessageType[]
    newMessageBody: string  // –¥–æ–±–∞–≤–∏–ª –≤ —Ç–∏–ø–∏–∑–∞—Ü–∏—é —Å–æ–æ–±—â–µ–Ω–∏–µ
}

// —Ç–∏–ø –¥–ª—è sidebar
type SideBarType = {}


// –æ–±—â–∏–π —Ç–∏–ø –¥–ª—è state
export type RootStateType = {
    profilePage: ProfilePageType
    dialogsPage: DialogsPageType
    sidebar: SideBarType
    // new state
    usersPage: {
        users: UserType[]
    }
}

// ---------------------------------------------------------------------------
// —Ç–∏–ø–∏–∑–∞—Ü–∏—è –æ–±—ä–µ–∫—Ç–∞ store
export type StoreType = {
    _state: RootStateType
    _rerenderEntireTree: () => void
    subscribe: (observer: () => void) => void
    getState: () => RootStateType
    dispatch: (action: DispatchActionType) => void
}

// -----------------------------------------------------------------------------
// –Ω–∞–∑–≤–∞–Ω–∏–µ –æ–±—â–µ–≥–æ —Ç–∏–ø–∞ –¥–ª—è –º–µ—Ç–æ–¥–∞ dispatch
export type DispatchActionType =
    ReturnType<typeof addPostActionCreator>
    | ReturnType<typeof updateNewPostTextActionCreator>
    | ReturnType<typeof updateNewMessageBodyActionCreator>
    | ReturnType<typeof sendMessageActionCreator>

    // –¥–æ–±–∞–≤–∏–ª –¥–≤–∞ —ç–∫—à–µ–Ω –∫—Ä–µ—ç–π—Ç–æ—Ä–∞
    | ReturnType<typeof followActionCreator>
    | ReturnType<typeof unfollowActionCreator>
    | ReturnType<typeof setUsersActionCreator>

//--------------------------------------------------------------------------------


// —Å–æ–∑–¥–∞–Ω–∏–µ ActionCreator -------------------------------------------------------------------------------

// —ç—Ç–æ –¥–≤–∞ —ç–∫—à–µ–Ω–∞ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è users –Ω–∞ —Å—Ç–µ–Ω—É
export const addPostActionCreator = (newPostText: string) => {
    return {
        type: "ADD-POST",
        newPostText: newPostText
    } as const
}
export const updateNewPostTextActionCreator = (newText: string) => {
    return {
        type: "UPDATE-NEW-POST-TEXT",
        newText: newText
    } as const
}

// –∞ —Ç—É—Ç —è –Ω–∞–ø–∏—à—É –¥–≤–∞ —ç–∫—à–µ–Ω–∞ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–µ—Ä–µ–ø–∏—Å–∫–∏ –º–µ–∂–¥—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏
export const updateNewMessageBodyActionCreator = (text: string) => {
    return {
        type: "UPDATE-NEW-MESSAGE-BODY",
        body: text
    } as const
}

export const sendMessageActionCreator = () => {
    return {
        type: "SEND-MESSAGE"
    } as const
}

// ----------------------------------------------------------------------------------------------------


// —Å–æ–∑–¥–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞ store
export let store: StoreType = {
    _state: {
        profilePage: {
            posts: [
                {id: 1, messages: "I am a champion in weightlifting", LikesCounts: 15},
                {id: 2, messages: "Ha, hold my beer!", LikesCounts: 20}
            ],
            newPostText: " "
        },
        dialogsPage: {
            dialogs: [
                {id: "1", name: "Max"},
                {id: "2", name: "Sergey"},
                {id: "3", name: "Aleksandr"}
            ],
            messages: [
                {id: "1", message: " –ö–∞–∫ —Ç–≤–æ–∏ –¥–µ–ª–∞? üòä\n"},
                {id: "2", message: "–ü—Ä–∏–≤–µ—Ç"},
                {id: "3", message: "–Ø –æ—á–µ–Ω—å —Ä–∞–¥ –ø–æ–º–æ—á—å!"},
                {id: "4", message: "–ß–µ–º —è –º–æ–≥—É –±—ã—Ç—å –ø–æ–ª–µ–∑–µ–Ω? ü§î"},
                {id: "5", message: "–£—Ä–∞! –£ –º–µ–Ω—è –ø–æ–ª—É—á–∏–ª–æ—Å—å! üéâ"},
                {id: "6", message: "–û–π, –∏–∑–≤–∏–Ω–∏, —è –Ω–µ –º–æ–≥—É –Ω–∞–π—Ç–∏ –æ—Ç–≤–µ—Ç –Ω–∞ —ç—Ç–æ—Ç –≤–æ–ø—Ä–æ—Å. üòï"},
                {id: "7", message: "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–µ —Å—Ç–µ—Å–Ω—è–π—Ç–µ—Å—å –∑–∞–¥–∞—Ç—å –º–Ω–µ –ª—é–±–æ–π –≤–æ–ø—Ä–æ—Å! üí¨"},
                {id: "8", message: "–°–ø–∞—Å–∏–±–æ –∑–∞ —Ç–≤–æ—é –ø–æ–º–æ—â—å! –Ø –æ—á–µ–Ω—å –±–ª–∞–≥–æ–¥–∞—Ä–µ–Ω. üôè"},
            ],
            newMessageBody: ""  // –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç users
        },
        sidebar: {},
        usersPage: {
            users: [
                {
                    id: 1,
                    photoUrl: 'https://mnogonotka.com/wp-content/uploads/2020/01/maks-korzh-shantazh-in.jpg',
                    followed: true,
                    fullName: "Max",
                    status: "I am boss",
                    location: {city: "Lipeck", country: "Russia"}
                },
                {
                    id: 2,
                    photoUrl: 'https://sun9-43.userapi.com/impf/c840122/v840122720/8547a/UIIm32UT6c0.jpg?size=768x960&quality=96&sign=8599a180c2a69c511358060d70e43855&c_uniq_tag=6FDfH_kbR-fhCntiOlrtAEHLbpUvjC0BIMD4R2YRunQ&type=album',
                    followed: true,
                    fullName: "Andrey",
                    status: "I am boss",
                    location: {city: "Moscow", country: "Russia"}
                },
                {
                    id: 3,
                    photoUrl: 'https://avatars.mds.yandex.net/get-kinopoisk-image/1773646/12776f88-26f2-4f34-85a4-3084550ef932/1920x',
                    followed: false,
                    fullName: "Kolyan",
                    status: "I am boss",
                    location: {city: "Sochi", country: "Russia"}
                },
            ]
        }
    },
    // –ø–µ—Ä–µ—Ä–∏—Å–æ–≤–∫–∞ callback
    _rerenderEntireTree() {
        console.log("state")
    },

    getState() {
        return this._state
    },
    subscribe(observer) {
        this._rerenderEntireTree = observer;
    },

    // –Ω–∞–ø–∏—Å–∞–Ω–∏–µ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ –º–µ—Ç–æ–¥–∞ dispatch
    dispatch(action) {  // { type: "ADD-POST"}
        // export reducer

        profilePageReducer(store._state.profilePage, action)
        dialogsPageReducer(store._state.dialogsPage, action)
        sidebarReducer(store._state.sidebar, action)
        usersReducer(store._state.usersPage, action)

        // _rerenderEntireTree
        this._rerenderEntireTree()

    }


}

